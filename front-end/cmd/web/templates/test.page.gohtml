{{template "base" .}}

{{define "content" }}
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-5">Test microservices</h1>
                <hr>

                <button id="brokerBtn" class="btn btn-outline-secondary">
                    Test Broker
                </button>

                <button id="authBtn" class="btn btn-outline-secondary">
                    Test Auth
                </button>

                <button id="logBtn" class="btn btn-outline-secondary">
                    Test Logger
                </button>

                <button id="mailBtn" class="btn btn-outline-secondary">
                    Test Mail
                </button>

                <button id="logGRPCBtn" class="btn btn-outline-secondary">
                    Test Log with GRPC
                </button>

                <div id="output" class="mt-5" style="outline: 1px solid silver; padding: 2em;">
                    <span class="text-muted">Output shows here...</span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h4 class="mt-5">Sent</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="payload"><span class="text-muted">Nothing sent yet...</span></pre>
                </div>
            </div>
            <div class="col">
                <h4 class="mt-5">Received</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="received"><span class="text-muted">Nothing received yet...</span></pre>
                </div>
            </div>
        </div>
    </div>
{{end}}

{{define "js"}}
    <script>
        brokerBtn.addEventListener("click", handleRequest())

        authBtn.addEventListener("click", handleRequest({
            url: "/handle",
            body: {
                action: "auth",
                auth: {
                    email: "admin@example.com",
                    password: "verysecret"
                }
            }
        }))

        logBtn.addEventListener("click", handleRequest({
            url: "/handle",
            body: {
                action: "log",
                log: {
                    name: "event",
                    data: "Some kind of data"
                }
            }
        }))

        mailBtn.addEventListener("click", handleRequest({
            url: "/handle",
            body: {
                action: "mail",
                mail: {
                    from: "me@email.com",
                    to: "you@email.com",
                    subject: "Test email",
                    Message: "Hello World!"
                }
            }
        }))

        logGRPCBtn.addEventListener("click", handleRequest({
            url: "/log-grpc",
            body: {
                action: "log",
                log: {
                    name: "event",
                    data: "Some kind of gRPC data"
                }
            }
        }))

        function handleRequest(config = {}) {
            return () => {
                fetch({{.BrokerURL}} + (config.url ?? ''), {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: config.body && JSON.stringify(config.body)
                })
                    .then(response => response.json())
                    .then(data => {
                        payload.innerHTML = config.body
                            ? JSON.stringify(config.body, null, 2)
                            : "<Empty Post Request>"
                        received.innerHTML = JSON.stringify(data, null, 2)
                        
                        if (data.error) {
                            output.innerHTML += `<br/><strong>Error:</strong> ${data.message}`
                        } else {
                            output.innerHTML += (
                                `<br/><strong>Response from service:</strong> ${data.message}`
                            )
                        }
                    })
                    .catch(err => {
                        output.innerHTML += `<br/><br/>Error: ${err}`
                    })
            }
        }
    </script>
{{end}}
